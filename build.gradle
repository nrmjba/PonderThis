
apply plugin: 'scala'

repositories {
    flatDir name: 'localLib', dirs: 'lib'
    mavenCentral()
}

ext {
    versions = [
        scala: '2.10.0',
        scalatest: '2.0.M5',
        scalacheck: '1.10.0'
    ]
}

//sourceSets {
//    main {
//        scala {
//            srcDirs = ['src/main/java', 'src/main/scala']
//        }
//    }
//    test {
//        scala { srcDirs = ['src/test/java', 'src/test/scala'] }
//    }
//}

dependencies {
    runtime "org.scala-lang:scala-compiler:$versions.scala"
    runtime  "org.scalaconsole:ScalaConsole:2.10-1.5.RC5"
    runtime  "org.scala-lang:scala-swing:$versions.scala"

    // Libraries needed for scala api
    compile "org.scala-lang:scala-library:$versions.scala"

    testCompile "org.scalatest:scalatest_$versions.scala:$versions.scalatest"
    testCompile "org.scalacheck:scalacheck_$versions.scala:$versions.scalacheck"
}

/**
 * For ScalaTest, Gradle can either use the JUnitRunner
 * or the <scalatest> ant task.  Use this to define
 * the ant task
 */
test {
    ant.taskdef(name: 'scalatest',
            classname: 'org.scalatest.tools.ScalaTestAntTask',
            classpath: classpath.asPath)
}

/**
 * Then use this to run the scalatest ant task.  Look to
 * http://scalatest.org/user_guide/using_the_scalatest_ant_task
 * for documentation
 */
test << {
    ant.scalatest(runpath: sourceSets.test.output.asPath,
            haltonfailure: 'true',
            fork: 'false') {
        reporter(type: 'stderr')
    }
}

task runPython(type:Exec) {
   workingDir 'src/main/python'
   commandLine 'python', '2013_04.py'
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.6"
}

task listCache << {
    configurations.compile.each { println it }
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

scalaConsole.dependsOn(build)
scalaConsole.dependsOn(test)
scalaConsole.classpath += sourceSets.main.output
scalaTestConsole.classpath += sourceSets.test.output

task console(type: JavaExec, dependsOn: classes){
    main = 'org.scalaconsole.ScalaConsole'
    classpath = configurations.runtime + sourceSets.main.output + sourceSets.test.output
}
